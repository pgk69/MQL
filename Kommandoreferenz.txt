Vorbemerkung:
Kommunikation von Perl zum EA und vom EA nach Perl sind entkoppelt.
D.h.: Es muß nicht unmittelbar nach einem Kommando auf den Response gewartet werden.
Kommando und Quittung können unabhängig voneinander verschickt werden.
Ein Kommando wird so oft geschickt, bis es quittiert wurde.
Der EA muß dafuer sorgen, dass er Kommandos mit derselben Referenz nicht mehrfach ausfuehrt,
sondern bei Wiederholung dieselbe Quittierung nochmals sendet.
Das Perlprogramm muß dafür sorgen, dass Kommandos so oft gesendet werden, bis eine entsprechende 
Quittung empfangen wurde

EA an Perl:

  Status:
    Bridge up:   bridge|[account name] {"status": "up",
                                        "pair":   "[gehandeltes Symbol]", 
                                        "time":   "[aktueller Zeitstempel]"}
           Bsp.: bridge|testaccount {"status": "up",
                                     "pair":   "EURUSD", 
                                     "time":   "1355775144"}
                                            
    Bridge down: bridge|[account name] {"status": "down"}
           Bsp.: bridge|testaccount {"status": "down"}


  Infos:
    Tick:        tick|[account name] {"pair": "[gehandeltes Symbol]",
                                      "bid":  "[Geldkurs]",
                                      "ask":  "[Briefkurs]",
                                      "time": "[aktueller Zeitstempel]"}
           Bsp.: tick|[account name] {"pair": "EURUSD",
                                      "bid":  "1.2405",
                                      "ask":  "1.2401",
                                      "time": "1355775144"}

    Accountinfo  account|[account name] {"leverage":   "[Leverage]",
                                         "balance":    "[Balance]",
                                         "margin":     "[Margin]",
                                         "freemargin": "[freie Margin]"}          
           Bsp.: account|[account name] {"leverage":   "400",
                                         "balance":    "24005.49",
                                         "margin":     "240.54",
                                         "freemargin": "23543,44"}          

    EMAinfo      ema|[account name] {"pair":      "[gehandeltes Symbol]",
                                     "ema_long":  "[EMA long]",
                                     "ima_long":  "[iMA long]",
                                     "ema_short": "[EMA short]",
                                     "ima_short": "[iMA short]"}          
           Bsp.: ema|[account name] {"pair":      "EUSUSD",
                                     "ema_long":  "1",
                                     "ima_long":  "7",
                                     "ema_short": "3",
                                     "ima_short": "5"}          
                 
    Orders:      orders|[account name] {"pair":        "[gehandeltes Symbol]", 
                                        "type":        "[Orderart]", 
                                        "ticket":      "[Ticket ID]", 
                                        "open_price":  "[Eröffnungskurs]", 
                                        "take_profit": "[TakeProfit]", 
                                        "stop_loss":   "[StoppLoss]", 
                                        "open_time":   "[Eröffnungszeit]",  
                                        "expire_time": "[Gültigkeitsdauer]", 
                                        "lot":         "[Anzahl Lots]"}
           Bsp.: orders|testaccount {"pair":        "EURUSD", 
                                     "type":        "OP_BUY", 
                                     "ticket":      "43916144", 
                                     "open_price":  "1.2405", 
                                     "take_profit": "1.2430", 
                                     "stop_loss":   "1.2305", 
                                     "open_time":   "1355773442", 
                                     "expire_time": "1355786556", 
                                     "lot":         "0.5"}
                                    {"pair":        "EURUSD", 
                                     "type":        "OP_BUY", 
                                     "ticket":      "4397556", 
                                     "open_price":  "1.2415", 
                                     "take_profit": "1.2440", 
                                     "stop_loss":   "1.2315", 
                                     "open_time":   "1355779882", 
                                     "expire_time": "1355789230", 
                                     "lot":         "0.5"}
         
  
  Responses:
    Get Parameter:
                 response|[account name] {"account":  "[Accountnummer]",
                                          "uuid":     "[UUID]",
                                          "cmd":      "get_parameter",
                                          "status":   "[0|1]",
                                          "msg":      "Parameter read [Name]:[Wert]",
                                          "name":     "[abgefragter Parameter]",
                                          "value":    "[abgefragter Wert]"}
  
    Set Parameter:
                 response|[account name] {"account":  "[Accountnummer]",
                                          "uuid":     "[UUID]",
                                          "cmd":      "set_parameter",
                                          "status":   "[0|1]",
                                          "msg":      "Parameter set [Name]:[Wert]",
                                          "name":     "[zu setzender Parameter]",
                                          "value":    "[zu setzender Wert]"}
  
    Trade set:   response|[account name] {"account":  "[Accountnummer]"
                                          "uuid":     "[UUID]",
                                          "cmd":      "set",
                                          "status":   "[0|1]",
                                          "ticket":   "[Ticket ID]",
                                          "msg":      "Order has been set: [Ticket ID]"}
  
    Trade reset: response|[account name] {"account":  "[Accountnummer]",
                                          "uuid":     "[UUID]",
                                          "cmd":      "reset",
                                          "status":   "[0|1]",
                                          "ticket":   "[Ticket ID]",
                                          "msg":      "Order has been modified: [Ticket ID]"}
  
    Trade unset: response|[account name] {"account":  "[Accountnummer]",
                                          "uuid":     "[UUID]",
                                          "cmd":      "unset",
                                          "status":   "[0|1]",
                                          "ticket":   "[Ticket ID]",
                                          "msg":      "Order has been closed: [Ticket ID]"}
  
    Draw:        response|[account name] {"account":  "[Accountnummer]",
                                          "uuid":     "[UUID]",
                                          "cmd":      "draw",
                                          "status":   "[0|1]"}
  

  
Perl an EA:

  Kommando get_parameter:

    Request Value: get_parameter|[account name] {"uuid": "[UUID]",
                                                 "name": "[abgefragter Wert]"}
             Bsp.: get_parameter|testaccount {"uuid": "4162F712-1DD2-11B2-B17E-C09EFE1DC403",
                                              "name": "pair"}
                       
    Erwarteter Response: Get Parameter
              account: [Accountnummer]
              uuid:    [UUID]
              cmd:     "get_parameter"
              status:  0: Nicht erfolgreich
                       1: Erfolgreich
              msg:     "Parameter read [Name]:[Wert]"
              name:    [Name]
              value:   [Wert]


  Kommando set_parameter:

    Request Value: set_parameter|[account name] {"uuid":  "[UUID]",
                                                 "name":  "[zu setzender Parameter]",
                                                 "value": "[zu setzender Wert]"}
             Bsp.: set_parameter|testaccount {"uuid":  "4162F712-1DD2-11B2-B17E-C09EFE1DC403",
                                              "name":  "Wait_for_Message",
                                              "value": "0"}
                       
    Erwarteter Response: Set Parameter 
              account:  [Accountnummer]
              uuid:     [UUID]
              cmd:      "set_parameter"
              status:   0: Nicht erfolgreich
                        1: Erfolgreich
              msg:      "Parameter set [Name]:[Value]"
              name:     [Name]
              value:    [Wert]
    

  Kommando set:

    New Trade/Order: set|[account name] {"uuid":         "[Referenz ID]",
                                         "type":         "[Orderart]", 
                                         "pair":         "[gehandeltes Symbol]", 
                                         "open_price":   "[Eröffnungskurs]",
                                         "slippage":     "[Slippage]", 
                                         "magic_number": "[Magic Number]", 
                                         "comment":      "[Kommentar]", 
                                         "take_profit":  "[TakeProfit]", 
                                         "stop_loss":    "[StoppLoss]", 
                                         "lot":          "[Anzahl Lots]"}
               Bsp.: set|testaccount {"uuid":         "4162F712-1DD2-11B2-B17E-C09EFE1DC403",
                                      "type":         "2", 
                                      "pair":         "EURUSD", 
                                      "open_price":   "1.25", 
                                      "slippage":     "0.1", 
                                      "magic_number": "11041963", 
                                      "comment":      "4162F712-1DD2-11B2-B17E-C09EFE1DC403:FxAssist:ST",  
                                      "take_profit":  "1.2503", 
                                      "stop_loss":    "1.2450", 
                                      "lot":          "0.5"}
  
    Trade Types:
       0 = (MQL4) OP_BUY       - buying position,
       1 = (MQL4) OP_SELL      - selling position,
       2 = (MQL4) OP_BUYLIMIT  - buy limit pending position,
       3 = (MQL4) OP_SELLLIMIT - sell limit pending position,
       4 = (MQL4) OP_BUYSTOP   - buy stop pending position,
       5 = (MQL4) OP_SELLSTOP  - sell stop pending position.

    Erwarteter Response: Trade set
              account:  [Accountnummer]
              uuid:     [UUID]
              cmd:      "set"
              status:   0: Nicht erfolgreich
                        1: Erfolgreich
              ticket:   [Ticket ID]
              msg:      "Order has been set: [Ticket ID]"
                
  
  Kommando reset:
   
    Update Trade:  reset|[account name] {"uuid":        "[UUID]",
                                         "ticket":      "[Ticket ID]", 
                                         "take_profit": "[TakeProfit]", 
                                         "stop_loss":   "[StoppLoss]"}
             Bsp.: reset|testaccount {"uuid":        "4162F712-1DD2-11B2-B17E-C09EFE1DC403",
                                      "ticket":      "43916144", 
                                      "take_profit": "1.2515", 
                                      "stop_loss":   "1.2502"}
    
    Update Order neu:  reset|[account name] {"ticket":      "[Ticket ID]", 
                                             "take_profit": "[TakeProfit]", 
                                             "stop_loss":   "[StoppLoss]",
                                             "open_price":  "[Eröffnungskurs]"}
                 Bsp.: reset|testaccount {"uuid":        "4162F712-1DD2-11B2-B17E-C09EFE1DC403",
                                          "ticket":      "43916144", 
                                          "take_profit": "1.2515", 
                                          "stop_loss":   "1.2502",
                                          "open_price":  "1.2507"}
    
    Erwarteter Response: Trade reset
              account:  [Accountnummer]
              uuid:     [UUID]
              cmd:      "reset"
              status:   0: Nicht erfolgreich
                        1: Erfolgreich
              ticket:   [Ticket ID]
              msg:      "Order has been modified: [Ticket ID]"


  Kommando unset:

    Close Trade/Order: unset|[account name] {"uuid":   "[UUID]",
                                             "ticket": "[Ticket ID]"}
                 Bsp.: unset|testaccount {"uuid":   "4162F712-1DD2-11B2-B17E-C09EFE1DC403",
                                          "ticket": "43916144"}

    Erwarteter Response: Trade unset
              account:  [Accountnummer]
              uuid:     [UUID]
              cmd:      "unset"
              status:   0: Nicht erfolgreich
                        1: Erfolgreich
              ticket:   [Ticket ID]
              msg:      "Order has been closed: [Ticket ID]"
     
  Kommando draw:

    Draw Object:   draw|[account name] {"uuid":        "[UUID]",
                                        "obj_type":    "[Objekt Type]", 
                                        "open_price":  "[Eröffnungskurs]", 
                                        "close_price": "[Schlußkurs]",
                                        "close_time":  "[Schlußzeit]",
                                        "prediction":  "[Prediction]"}
             Bsp.: draw|testaccount {"uuid":        "4162F712-1DD2-11B2-B17E-C09EFE1DC403",
                                     "object_type": "OBJ_ARROW", 
                                     "open_price":  "1.2054", 
                                     "close_time":  "753324221",
                                     "close_price": "1.2234",
                                     "prediction":  "0.7"}

    Erwarteter Response: Draw
              account:  [Accountnummer]
              uuid:     [UUID]
              cmd:      "unset"
              status:   0: Nicht erfolgreich
                        1: Erfolgreich
